function [fitresult, gof] = fitTypeIII(dosesGy, aa, aa_errors)
%CREATEFIT(DOSESGY,AA)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : dosesGy
%      Y Output: aa
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 06-Aug-2020 12:22:06


%% Fit: 'untitled fit 3'.
[xData, yData] = prepareCurveData( aa, dosesGy ); %% Cambiado el orden

% Set up fittype and options.
ft = fittype( 'alpha.*x +beta.*x.^gamma', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
%opts.Display = 'Off';
opts.Robust = 'LAR';
opts.Weights = aa_errors.^(-2); %% Pesos

allfits = {};
allgofs = {};
allN = 0.2:0.2:4;
Rvalues = nan(size(allN));

for i=1:numel(allN)    
    opts.Upper = [1000 1000 allN(i)];
    opts.Lower = [0 0 allN(i)];
    opts.StartPoint = [1 1 allN(i)];
    % Fit model to data.
    [fitresult] = fit( xData, yData, ft, opts);
    opts.StartPoint = coeffvalues(fitresult);
    opts.Weights = aa_errors.^(-2);
    [fitresult, gof] = fit( xData, yData, ft, opts);
    allfits{i} = fitresult;
    allgofs{i} = gof;
    Rvalues(i) = gof.rsquare;   
end
% Plot fit with data.

% figure(10)
% plot(allN,Rvalues,'o');
% [bestN, bestI] = max(Rvalues);
% n = allN(bestI)
% % 
fitresult = allfits{bestI};
gof = allgofs{bestI};
% 
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% hold on
% errorbar(xData, yData, aa_errors, 'horizontal', 'b.');
% legend( h, 'netOD vs. dosesGy', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'netOD', 'Interpreter', 'none' );
% ylabel( 'Doses (Gy)', 'Interpreter', 'none' );
% grid on


